prompt_honai_setup() {
    autoload -Uz vcs_info

    zstyle ':vcs_info:*' enable git cvs
    zstyle ':vcs_info:git:*' formats '%b'
    zstyle ':vcs_info:git:*' actionformats '%b|%a'

    if type kubectl > /dev/null; then
        is_kubectl_found="1"
    else
        is_kubectl_found="0"
    fi

    add-zsh-hook precmd prompt_honai_precmd
}

prompt_honai_precmd () {
    local prompt_char="❯"
    local prompt_success="%F{cyan}${prompt_char}%f"
    local prompt_fail="%F{red}${prompt_char}%f"

    vcs_info

    local vcs
    if [[ -n ${vcs_info_msg_0_} ]]; then
        local gs="$(git status --short 2>/dev/null)"
        if [[ -n $gs ]]; then
            local dirty="%F{magenta}*%f"
        fi
        vcs=" %F{8}${vcs_info_msg_0_}%f$dirty"
    fi

    local k8s_ctx
    local k8s
    if [[ $is_kubectl_found = "1" ]]; then
        k8s_ctx="$(kubectl config current-context)"
        k8s=" %F{8}⎈${k8s_ctx}%f"
    fi

    local dot_info
    if [[ $PWD = $HOME && -n "$(dot status --short 2> /dev/null)" ]]; then
        dot_info=" %F{red}*%f"
    fi

    local remote_info=''
    if [[ -n "$SSH_CONNECTION" ]]; then
        remote_info='%n@%M:'
    fi

    PROMPT="
${remote_info}%~${dot_info}${vcs}${k8s}%(0?.. [%?])
%(0?.%F{blue}.%F{red})${prompt_char}%f "

    RPROMPT="%w %*"
}

prompt_honai_setup "$@"
