prompt_honai_setup() {
	autoload -Uz vcs_info

	zstyle ':vcs_info:*' enable git cvs
	zstyle ':vcs_info:*' use-simple true
	zstyle ':vcs_info:git:*' formats '%b'
	zstyle ':vcs_info:git:*' actionformats '%b%F{yellow}!%a%f'
	zstyle ':vcs_info:git+set-message:*' hooks vcs_git_dirty vcs_git_arrow
	zstyle ':vcs_info:cvs:*' formats '%b(%s)'

	if type kubectl >/dev/null; then
		is_kubectl_found="1"
	else
		is_kubectl_found="0"
	fi

	remote_info=''
	if [[ -n "$SSH_CONNECTION" ]]; then
		remote_info='%M '
	fi

	# icons
	icon_git=''        # nf-dev-git
	icon_git_branch='' # nf-dev-git_branch
	icon_k8s='%F{blue}󱃾%f '       # nf-md-kubernetes
	#icon_k8s='⎈ '
	icon_python='%F{cyan}%f' # nf-dev-python
	icon_yj='%F{9}%f'        # nf-dev-yahoo_small
	prompt_char="❯"
	prompt_honai_rprompt_sep_nbsp=' '

	add-zsh-hook precmd prompt_honai_precmd
}

+vi-vcs_git_arrow() {
	export GIT_OPTIONAL_LOCKS=0
	local arrows ahead behind
	# Exit early in case the worktree is on a detached HEAD
	git rev-parse @'{u}' >/dev/null 2>&1 || return 0
	local a_b="$(git rev-list --left-right --count HEAD...@'{u}' 2>/dev/null)"
	a_b=(${(ps:\t:)a_b})
	ahead=${a_b[1]}
	behind=${a_b[2]}
	((ahead > 0)) && arrows+="⇡"
	((behind > 0)) && arrows+="⇣"
	hook_com[branch]+="%F{white}$arrows%f"
	unset GIT_OPTIONAL_LOCKS
}

+vi-vcs_git_dirty() {
	export GIT_OPTIONAL_LOCKS=0
	local -r git_status="$(git status --short 2>/dev/null)"
	if [[ -n $git_status ]]; then
		hook_com[branch]+='%F{white}*%f'
	fi
	local -r git_stash="$(git rev-list --count refs/stash 2>/dev/null)"
	if ((git_stash > 0)); then
		hook_com[branch]+='%F{white}≡%f'
	fi
	unset GIT_OPTIONAL_LOCKS
}

prompt_honai_precmd() {
	vcs_info

	prompt_infos=()

	# dir
	prompt_infos+=('%F{blue}%~%f')

	# dot indicator
	if [[ $PWD = "$HOME" && -n "$(dot status --short 2>/dev/null)" ]]; then
		prompt_infos+=("%F{red}*%f")
	fi

	# vcs
	if [[ -n ${vcs_info_msg_0_} ]]; then
		prompt_infos+=("%F{8}$vcs_info_msg_0_%f")
	fi

	# venv
	if [[ -n "$VIRTUAL_ENV" ]]; then
		local -r last="${VIRTUAL_ENV##*/}"
		# a/b/c -> b
		local -r _dir="${VIRTUAL_ENV%/*}"
		local -r last2="${_dir##*/}"
		if [[ $last =~ ^[.]?venv$ ]]; then
			local venv_name="$last2"
		else
			local venv_name="$last"
		fi
		prompt_infos+=("${icon_python}%F{8}${venv_name}%f")
	fi

	# k8s
	if [[ $is_kubectl_found = "1" ]]; then
		local -r k8s_ctx="$(kubectl config current-context 2>/dev/null)"
		if [[ -n "$k8s_ctx" ]]; then
			prompt_infos+=("${icon_k8s}%F{8}${k8s_ctx}%f")
		fi
	fi

	PROMPT="
${remote_info}${prompt_infos[*]}%(0?.. [%?])
%(0?.%F{blue}.%F{red})${prompt_char}%f "

	RPROMPT="$prompt_honai_rprompt_sep_nbsp%F{8}%*%f"
}

prompt_honai_remove_rprompt() {
	sed -E "s/^(${prompt_char} .+[^[:space:]]) +${prompt_honai_rprompt_sep_nbsp}.+$/\1/g"
}

prompt_honai_setup "$@"
